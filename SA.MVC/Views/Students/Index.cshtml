@using SA.Core.Enums;

@model StudentHomeDto
@{
    ViewData["Title"] = "Home Page";
    Layout = "_Layout";
}

@if (!Model.AssignedProfessor)
{


    <div class="text-center">
        <h1 class="display-4">Dobrodošli</h1>
        <p>Molimo vas odaberite <strong class="text-info">željene</strong> mentore.</p>
    </div>

    <div class="container">
        <div class="row justify-content-between">
            <div class="col-md">
                <div class="card card border-0 shadow card-height">
                    <div class="card-body overflow-auto">
                        <h5 class="card-title">Ponuđeni mentori</h5>
                        <p class="card-text" id="mentorsNumber"></p>
                        <hr />
                        <div class="row">
                            <ul class="list-group border-0" id="lst">
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md">
                <div class="card border-0 shadow card-height">
                    <div class="card-body overflow-auto">
                        <h5 class="card-title">Odabrani mentori</h5>
                        <p class="card-text">Provjerite izbor, kasnije izmjene <strong>neće</strong> biti moguće.</p>
                        <hr />
                        <div class="row">
                            <ul class="list-group border-0" id="odabir">
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row justify-content-around mt-5">
            <a class="btn btn-info p-3 w-25" href="#" onclick="SaveRecords()">Spremi odabir</a>
        </div>
    </div>
}

else
{
    <div class="text-center">
        <h1 class="display-4">Dobrodošli</h1>
        <p>Već ste odabrali svoje mentori, molimo pričekajte na <strong class="text-warning">objavu</strong> rezultata.</p>
        <a asp-action="MyResults" asp-controller="Students" class="btn btn-primary">Rezultati</a>
    </div>
}

@section Scripts
    {

    <script type="text/javascript">
        var professorArray = [];
        var chosenProfessorArray = [];
        var response = 0;

        $(document).ready(function () {

            loadData();
            //Dohvaća sve podatke preko APIJA
            function loadData() {
                $.ajax({
                    url: '@Url.Action("GetProfessorsByCourse", "Students", new { id = @Model.Id})',
                    type: "GET",
                    success: function (resp) {
                        response = resp;
                        if (resp.length == 7) {
                            $("#mentorsNumber").html("Molimo vas odaberite točno <strong>pet </strong>mentora.");
                        }
                        else if (resp.length == 4) {
                            $("#mentorsNumber").html("Molimo vas odaberite točno <strong>dva </strong>mentora.");
                        }
                        else if (resp.length == 2) {
                            $("#mentorsNumber").html("Molimo vas odaberite točno <strong>dva </strong>mentora.");
                        }
                        else {
                            $("#mentorsNumber").html("Molimo vas odaberite <strong>više </strong>mentora.");
                        }

                        $.each(resp, function (idx, val) {
                            var footer = document.createElement("footer");
                            footer.className = "blockquote-footer";
                            footer.textContent = val.areaOfInterestOne + ', ' + val.areaOfInterestTwo + ', ' + val.areaOfInterestThree;

                            var liElement = document.createElement("li");
                            liElement.className = "list-group-item border-0";
                            liElement.id = val.id;
                            var aElement = document.createElement("a");
                            aElement.textContent = val.firstName + ' ' + val.lastName;
                            aElement.className = "btn btn-dark professor";
                            aElement.href = "#";
                            liElement.appendChild(aElement);
                            liElement.appendChild(footer);
                            professorArray.push(liElement);
                        });
                        $("#lst").html(professorArray);
                        // fetcha sve buttone koji imaju klasu .list-group-item
                        const buttonList = document.querySelectorAll('.list-group-item a');
                        // Dodati referencu na klik na svaki dohvaćeni "button"
                        for (let i = 0; i < buttonList.length; i++) {
                            const button = buttonList[i];
                            // Referenca na funkciju "handleButtonClick" koja automatski šalje "event" parametar
                            button.addEventListener('click', handleButtonClick);
                        }
                    },
                    error: function (err) {
                        alert("Error! " + err.status);
                    }
                });
            };
        });

        function handleButtonClick(e)
        {
            var i;

            if (e.path[2].id == "lst") {

                for (i = 0; i < professorArray.length; i++) {
                    if (professorArray[i].id == e.path[1].id)
                        professorArray.splice(i, 1);
                }

                document.getElementById(e.path[1].id).remove();

                var footer = document.createElement("footer");
                footer.className = "blockquote-footer";
                footer.textContent = e.target.nextSibling.innerText;

                var liElement = document.createElement("li");
                liElement.className = "list-group-item border-0";
                liElement.id = e.path[1].id

                var aElement = document.createElement("a");

                aElement.textContent = e.target.innerText;
                aElement.className = "btn btn-secondary professor";
                aElement.href = "#";

                liElement.appendChild(aElement);
                liElement.appendChild(footer);
                liElement.addEventListener("click", handleButtonClick);

                chosenProfessorArray.push(liElement);
                $("#odabir").html(chosenProfessorArray);
            }
            else if (e.path[2].id == "odabir")
            {
                for (i = 0; i < chosenProfessorArray.length; i++) {
                    if (chosenProfessorArray[i].id == e.path[1].id)
                        chosenProfessorArray.splice(i, 1);
                }

                var footer = document.createElement("footer");
                footer.className = "blockquote-footer";
                footer.textContent = e.target.nextSibling.innerText;

                var liElement = document.createElement("li");
                liElement.className = "list-group-item border-0";
                liElement.id = e.path[1].id

                var aElement = document.createElement("a");
                aElement.textContent = e.target.innerText;
                aElement.className = "btn btn-dark professor";
                aElement.href = "#";

                document.getElementById(e.path[1].id).remove();

                liElement.appendChild(aElement);
                liElement.appendChild(footer);
                liElement.addEventListener("click", handleButtonClick);

                professorArray.push(liElement);
                $("#lst").append(liElement);
            }
        }

        function SaveRecords() {
            var getElements = document.querySelectorAll('#odabir');
            var countElements = document.querySelectorAll('#odabir > .list-group-item');
            var records = getElements[0].childNodes;
            var i;
            var professorIds = [];

            var professorNumberCheck = CountProfessors(countElements.length)

            if (!professorNumberCheck) {
                Swal.fire({
                    icon: 'error',
                    title: 'Greška...',
                    text: 'Pogrešan broj mentora.',
                    footer: '<small>Broj mentora po studijima: Računarstvo-5, strojarstvo-5, brodogradnja-1, elektrotehnika-2.</small>'
                });
                return false;
            }

            for (i = 0; i < records.length; i++) {
                professorIds[i] = records[i].id;
            }

            $.ajax({
                url: '@Url.Action("SaveStudentsChoices", "Students")',
                type: "POST",
                data: { "choices": professorIds },
                success: function (resp) {
                    Swal.fire(
                        'Uspješno spremljeno!',
                        'Vaš odabir je spremljen, Vaš rezultat biti će objavljen uskoro!',
                        'success',
                    )
                },
                error: function (err) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Greška...',
                        text: 'Pogrešan broj mentora.',
                        footer: '<small>Broj mentora po studijima: Računarstvo-5, strojarstvo-5, brodogradnja-1, elektrotehnika-2.</small>'
                    })
                }
            });
        }

        function CountProfessors(professorsNumber) {
            if (response.length == 7)
                if (professorsNumber != 5)
                    return false;
                else if (response.length == 4)
                if (professorsNumber != 2)
                    return false;
                else if (response.length == 2)
                    if (professorsNumber != 2)
                            return false;
            return true;
        }

    </script>
}
